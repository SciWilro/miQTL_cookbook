#imputation
set.seed(1)
nmr_300fg_corr_impute = imputePCA(nmr_300fg_corr,ncp = 10)
nmr_300fg_corr = nmr_300fg_corr_impute$completeObs
set.seed(1)
nmr_300fg_corrBMI_impute = imputePCA(nmr_300fg_corrBMI,ncp = 10)
nmr_300fg_corrBMI = nmr_300fg_corrBMI_impute$completeObs
cor_lm = function(data, age,sex){
result = data
for(i in 1:ncol(result)){
result[result[,i] ==0,i] = NA
result[,i] = log(result[,i])
Nna.ind = !is.na(result[,i])
if(sum(Nna.ind)>1){result[Nna.ind,i] = resid(lm(result[Nna.ind,i]~ age[Nna.ind]+sex[Nna.ind]))} else result[,i] = NA
}
result = result - min(result,na.rm =T)*2
result[is.na(result)] = 0
return(result)
}
i = intersect(rownames(metaphlan_300fg),rownames(clin_300fg))
metaphlan_300fg_corr = cor_lm(metaphlan_300fg[i,],clin_300fg[i,]$age,clin_300fg[i,]$sex)
i = intersect(rownames(humann_300fg),rownames(clin_300fg))
humann_300fg_corr = cor_lm(humann_300fg[i,],clin_300fg[i,]$age,clin_300fg[i,]$sex)
cor_lmBMI = function(data, age,BMI){
result = data
for(i in 1:ncol(result)){
result[result[,i] ==0,i] = NA
result[,i] = log(result[,i])
Nna.ind = !is.na(result[,i])
if(sum(Nna.ind)>1){result[Nna.ind,i] = resid(lm(result[Nna.ind,i]~ age[Nna.ind]+sex[Nna.ind]+BMI[Nna.ind]))} else result[,i] = NA
}
result = result - min(result,na.rm =T)*2
result[is.na(result)] = 0
return(result)
}
i = intersect(rownames(metaphlan_300fg),rownames(clin_300fg))
metaphlan_300fg_corrBMI = cor_lmBMI(metaphlan_300fg[i,],clin_300fg[i,]$age,clin_300fg[i,]$sex,clin_300fg[i,]$BMI)
metaphlan_300fg_corrBMI = cor_lmBMI(metaphlan_300fg[i,],clin_300fg[i,]$age,clin_300fg[i,]$sex,clin_300fg[i,]$BMI)
cor_lmBMI = function(data, age,sex,BMI){
result = data
for(i in 1:ncol(result)){
result[result[,i] ==0,i] = NA
result[,i] = log(result[,i])
Nna.ind = !is.na(result[,i])
if(sum(Nna.ind)>1){result[Nna.ind,i] = resid(lm(result[Nna.ind,i]~ age[Nna.ind]+sex[Nna.ind]+BMI[Nna.ind]))} else result[,i] = NA
}
result = result - min(result,na.rm =T)*2
result[is.na(result)] = 0
return(result)
}
i = intersect(rownames(metaphlan_300fg),rownames(clin_300fg))
metaphlan_300fg_corrBMI = cor_lmBMI(metaphlan_300fg[i,],clin_300fg[i,]$age,clin_300fg[i,]$sex,clin_300fg[i,]$BMI)
library(knitr)
clin_300fg = read.table("../../data/300FG/tsv/300FG_clinical.tsv",sep="\t",header=T,row.names = 1)
blood_300fg = read.table("../../data/300FG/tsv/300FG_blood.tsv",sep="\t",header=T,row.names = 1)
vascular_300fg = read.table("../../data/300FG/tsv/300FG_vascular.tsv",sep="\t",header=T,row.names = 1)
vascular_300fg$PlaqueBinary = vascular_300fg$Numberofplaques > 0
#NMR
nmr_300fg = read.table("../../data/300FG/tsv/300FG_NMR.tsv",header=T,row.names=1,sep="\t")
nmr_300fg[nmr_300fg==0] = min(nmr_300fg[nmr_300fg>0],na.rm =T) /2
nmr_300fg = log(nmr_300fg)
#microbiome
metaphlan_300fg = t(read.table("../../data/300FG/tsv/CVON_374samples_GnumberID_metaphlan_2.2_output.txt",header=T,row.names=1,sep="\t"))
humann_300fg = read.table("../../data/300FG/tsv/CVON_374samples_GnumberID_humann2_output.txt",header=T,sep="\t",as.is = T,row.names=1)
humann_300fg = t(humann_300fg[grep("[|]",rownames(humann_300fg),invert = T),])
linkage = read.table("../../data/300FG/tsv/linkageFile.tsv",sep="\t",as.is = T,header=T)
linkage[,1] = sub("CVON.","",linkage[,1])
rownames(metaphlan_300fg) = linkage[unlist(lapply(rownames(metaphlan_300fg),function(x) {which(x == linkage$GID)})),1]
rownames(humann_300fg) = linkage[unlist(lapply(rownames(humann_300fg),function(x) {which(x == linkage$GID)})),1]
metaphlan_300fg = metaphlan_300fg/100
humann_300fg = sweep(humann_300fg,1,rowSums(humann_300fg),"/")
library(missMDA)
cor_loess = function(data, age,sex){
result = data
for(i in 1:ncol(data)){
Nna.ind = !is.na(data[,i])
male.ind <- ((sex == 1) & Nna.ind)
female.ind <- ((sex == 0) & Nna.ind)
result[!Nna.ind,i] = NA
result[male.ind,i] = resid(loess(data[male.ind,i] ~ age[male.ind]))
result[female.ind,i] = resid(loess(data[female.ind,i] ~ age[female.ind]))
}
return(result)
}
cor_loessBMI = function(data, age,sex,BMI){
result = data
for(i in 1:ncol(data)){
Nna.ind = !is.na(data[,i])
male.ind <- ((sex == 1) & Nna.ind)
female.ind <- ((sex == 0) & Nna.ind)
result[!Nna.ind,i] = NA
result[male.ind,i] = resid(loess(data[male.ind,i] ~ age[male.ind]+BMI[male.ind]))
result[female.ind,i] = resid(loess(data[female.ind,i] ~ age[female.ind]+BMI[female.ind]))
}
return(result)
}
nmr_300fg_corr = cor_loess(nmr_300fg,clin_300fg[rownames(nmr_300fg),]$age,clin_300fg[rownames(nmr_300fg),]$sex)
nmr_300fg_corrBMI = cor_loessBMI(nmr_300fg,clin_300fg[rownames(nmr_300fg),]$age,clin_300fg[rownames(nmr_300fg),]$sex,clin_300fg[rownames(nmr_300fg),]$BMI)
#imputation
set.seed(1)
nmr_300fg_corr_impute = imputePCA(nmr_300fg_corr,ncp = 10)
nmr_300fg_corr = nmr_300fg_corr_impute$completeObs
set.seed(1)
nmr_300fg_corrBMI_impute = imputePCA(nmr_300fg_corrBMI,ncp = 10)
nmr_300fg_corrBMI = nmr_300fg_corrBMI_impute$completeObs
cor_lm = function(data, age,sex){
result = data
for(i in 1:ncol(result)){
result[result[,i] ==0,i] = NA
result[,i] = log(result[,i])
Nna.ind = !is.na(result[,i])
if(sum(Nna.ind)>1){result[Nna.ind,i] = resid(lm(result[Nna.ind,i]~ age[Nna.ind]+sex[Nna.ind]))} else result[,i] = NA
}
result = result - min(result,na.rm =T)*2
result[is.na(result)] = 0
return(result)
}
i = intersect(rownames(metaphlan_300fg),rownames(clin_300fg))
metaphlan_300fg_corr = cor_lm(metaphlan_300fg[i,],clin_300fg[i,]$age,clin_300fg[i,]$sex)
i = intersect(rownames(humann_300fg),rownames(clin_300fg))
humann_300fg_corr = cor_lm(humann_300fg[i,],clin_300fg[i,]$age,clin_300fg[i,]$sex)
cor_lmBMI = function(data, age,sex,BMI){
result = data
for(i in 1:ncol(result)){
result[result[,i] ==0,i] = NA
result[,i] = log(result[,i])
Nna.ind = !is.na(result[,i])
if(sum(Nna.ind)>1){result[Nna.ind,i] = resid(lm(result[Nna.ind,i]~ age[Nna.ind]+sex[Nna.ind]+BMI[Nna.ind]))} else result[,i] = NA
}
result = result - min(result,na.rm =T)*2
result[is.na(result)] = 0
return(result)
}
i = intersect(rownames(metaphlan_300fg),rownames(clin_300fg))
metaphlan_300fg_corrBMI = cor_lmBMI(metaphlan_300fg[i,],clin_300fg[i,]$age,clin_300fg[i,]$sex,clin_300fg[i,]$BMI)
i = intersect(rownames(humann_300fg),rownames(clin_300fg))
humann_300fg_corrBMI = cor_lmBMI(humann_300fg[i,],clin_300fg[i,]$age,clin_300fg[i,]$sex,clin_300fg[i,]$BMI)
pathways = read.delim("../../../../microbiome_data_release_01_02_2017/microbiome/normalized_microbiome/DataPerCohort/LLD.humann.normalized.tsv")
pathways = t(pathways)
phenos = read.table("../../../../microbiome_data_release_01_02_2017/phenotypes/phenotypes_MIBS_LLD_IBD.txt",header=T,row.names=1,sep="\t")
patway_full_names = colnames(pathways)
colnames(pathways) = sub(":.*","",colnames(pathways))
nmr = read.table("../data/nmr/brainshake_corrected.txt",header=T,row.names=1,sep="\t")
nmrCVD_list = read.table("../data/nmr/NMR_CVD_33traits_description.txt",sep="\t",as.is = T,header=T)
set.seed(1)
nmr_impute = imputePCA(nmr,ncp = 10)
nmr_impute = nmr_impute$completeObs
#nmrCVD = nmr_impute[,nmrCVD_list$trait]
fasting = read.table("../data/phenotypes/fasting.txt",header=T,row.names = 1)
names = rownames(fasting)[fasting$Fasting == "Ja"]
pathways = pathways[,colSums(pathways > 0) > nrow(pathways)*0.25]
pathways = pathways[names,]
nmr_lld = nmr_impute[names,]
phenos = phenos[names,]
phenos[,3] = as.integer(phenos[,3])
nmr_lldBMI = apply(nmr_lld,2,function(x){x = resid(loess(x ~ phenos$BMI))})
pathwaysBMI = apply(as.matrix(pathways),2,function(x){
x[x==0] = NA
x[!is.na(x)] = resid(lm(x[!is.na(x)] ~ phenos$BMI[!is.na(x)]))
return(x)})
pathwaysBMI =pathwaysBMI - min(pathwaysBMI,na.rm =T)*2
pathwaysBMI[is.na(pathwaysBMI)] = 0
colnames(nmr_lld) = gsub("_",".",colnames(nmr_lld))
colnames(nmr_lld) = gsub(".ratio","",colnames(nmr_lld))
colnames(nmr_300fg_corr) = gsub("_",".",colnames(nmr_300fg_corr))
colnames(nmr_300fg_corr) = gsub("UnSat","UnsatDeg",colnames(nmr_300fg_corr))
colnames(nmr_lldBMI) = gsub("_",".",colnames(nmr_lldBMI))
colnames(nmr_lldBMI) = gsub(".ratio","",colnames(nmr_lldBMI))
colnames(nmr_300fg_corrBMI) = gsub("_",".",colnames(nmr_300fg_corrBMI))
colnames(nmr_300fg_corrBMI) = gsub("UnSat","UnsatDeg",colnames(nmr_300fg_corrBMI))
setdiff(colnames(nmr_lld),colnames(nmr_300fg_corr))
setdiff(colnames(nmr_300fg_corr),colnames(nmr_lld))
nmr_lld = nmr_lld[,colnames(nmr_300fg_corr)]
nmr_lldBMI = nmr_lldBMI[,colnames(nmr_300fg_corr)]
colnames(humann_300fg_corr) = sub(":.*","",colnames(humann_300fg_corr))
colnames(humann_300fg_corrBMI) = sub(":.*","",colnames(humann_300fg_corrBMI))
inters_path = intersect(colnames(humann_300fg_corr),colnames(pathways))
humann_300fg_corr = humann_300fg_corr[,inters_path]
pathways = pathways[,inters_path]
humann_300fg_corrBMI = humann_300fg_corrBMI[,inters_path]
pathwaysBMI = pathwaysBMI[,inters_path]
pvals = matrix(NA,ncol = ncol(pathways),nrow = ncol(nmr_lld))
cors = matrix(NA,ncol = ncol(pathways),nrow = ncol(nmr_lld))
for(i in 1:ncol(pathways)){
for(j in 1:ncol(nmr_lld)){
cor1 = cor.test(nmr_lld[pathways[,i]>0,j],pathways[pathways[,i]>0,i],method = "spearman")
pvals[j,i] = cor1$p.value
cors[j,i] = cor1$estimate
}
}
qvals = matrix(p.adjust(pvals,method = "BY"),ncol = ncol(pvals))
colnames(qvals) = colnames(pathways)
rownames(qvals) = colnames(nmr_lld)
ind = which(qvals < 0.01,arr.ind = T)
lld_result = data.frame(nmr = colnames(nmr_lld)[ind[,1]],path = colnames(pathways)[ind[,2]],Cor = cors[ind],Pval = pvals[ind],Qval = qvals[ind],stringsAsFactors = F)
lld_result$numSamples_300FG = NA
lld_result$cor_300FG = NA
lld_result$pval_300FG = NA
nmr_300fg_corr = nmr_300fg_corr[intersect(rownames(humann_300fg_corr),rownames(nmr_300fg_corr)),]
humann_300fg_corr = humann_300fg_corr[intersect(rownames(humann_300fg_corr),rownames(nmr_300fg_corr)),]
for(i in 1:nrow(lld_result)){
print(i)
lld_result$numSamples_300FG[i] = sum(humann_300fg_corr[,lld_result$path[i]] >0 )
pathname = lld_result$path[i]
nmrname = lld_result$nmr[i]
if(lld_result$numSamples_300FG[i] >10) {cor1 = cor.test(
humann_300fg_corr[humann_300fg_corr[,pathname]>0,pathname],
nmr_300fg_corr[humann_300fg_corr[,pathname]>0,nmrname],method = "spearman")
lld_result$cor_300FG[i] = cor1$estimate
lld_result$pval_300FG[i] = cor1$p.value
} else{
lld_result$cor_300FG[i] = NA
lld_result$pval_300FG[i] = NA
}
}
pvals = matrix(NA,ncol = ncol(pathwaysBMI),nrow = ncol(nmr_lldBMI))
cors = matrix(NA,ncol = ncol(pathwaysBMI),nrow = ncol(nmr_lldBMI))
for(i in 1:ncol(pathwaysBMI)){
for(j in 1:ncol(nmr_lldBMI)){
cor1 = cor.test(nmr_lldBMI[pathwaysBMI[,i]>0,j],pathwaysBMI[pathwaysBMI[,i]>0,i],method = "spearman")
pvals[j,i] = cor1$p.value
cors[j,i] = cor1$estimate
}
}
qvals = matrix(p.adjust(pvals,method = "BY"),ncol = ncol(pvals))
colnames(qvals) = colnames(pathwaysBMI)
rownames(qvals) = colnames(nmr_lldBMI)
ind = which(qvals < 0.01,arr.ind = T)
lld_resultBMI = data.frame(nmr = colnames(nmr_lldBMI)[ind[,1]],path = colnames(pathwaysBMI)[ind[,2]],Cor = cors[ind],Pval = pvals[ind],Qval = qvals[ind],stringsAsFactors = F)
lld_resultBMI$numSamples_300FG = NA
lld_resultBMI$cor_300FG = NA
lld_resultBMI$pval_300FG = NA
nmr_300fg_corrBMI = nmr_300fg_corrBMI[intersect(rownames(humann_300fg_corrBMI),rownames(nmr_300fg_corrBMI)),]
humann_300fg_corrBMI = humann_300fg_corrBMI[intersect(rownames(humann_300fg_corrBMI),rownames(nmr_300fg_corrBMI)),]
for(i in 1:nrow(lld_resultBMI)){
print(i)
lld_resultBMI$numSamples_300FG[i] = sum(humann_300fg_corrBMI[,lld_resultBMI$path[i]] >0 )
pathname = lld_resultBMI$path[i]
nmrname = lld_resultBMI$nmr[i]
if(lld_resultBMI$numSamples_300FG[i] >10) {cor1 = cor.test(
humann_300fg_corrBMI[humann_300fg_corrBMI[,pathname]>0,pathname],
nmr_300fg_corrBMI[humann_300fg_corrBMI[,pathname]>0,nmrname],method = "spearman")
lld_resultBMI$cor_300FG[i] = cor1$estimate
lld_resultBMI$pval_300FG[i] = cor1$p.value
} else{
lld_resultBMI$cor_300FG[i] = NA
lld_resultBMI$pval_300FG[i] = NA
}
}
head(lld_resultBMI)
hist(lld_resultBMI$pval_300FG)
p.adjust(lld_resultBMI$pval_300FG)
p.adjust(lld_resultBMI$pval_300FG,method = "BH")
p.adjust(lld_resultBMI$pval_300FG,method = "BH")<.05
sum(p.adjust(lld_resultBMI$pval_300FG,method = "BH")<.05)
sum(p.adjust(lld_resultBMI$pval_300FG,method = "BH")<.05,na.rm= T)
sum(p.adjust(lld_resultBMI$pval_300FG,method = "BH")<.1,na.rm= T)
lld_resultBMI[(p.adjust(lld_resultBMI$pval_300FG,method = "BH")<.1,na.rm= T),]
lld_resultBMI[p.adjust(lld_resultBMI$pval_300FG,method = "BH")<0.1,]
dim(lld_result)
head(lld_result)
hist(lld_result$pval_300F)
sum(lld_result$pval_300FG<0.05)
sum(lld_result$pval_300FG<0.05,na.rm =T)
dim(lld_resultBMI)
head(lld_resultBMI$pval_300FG)
sum((lld_resultBMI$pval_300FG<0.05))
sum((lld_resultBMI$pval_300FG<0.05),na.rm = T)
sum((lld_resultBMI$pval_300FG<0.1),na.rm = T)
sum(lld_result$pval_300FG<0.05,na.rm =T)
lld_result[lld_result$pval_300FG<0.05,]
library(pwr)
?pwr
pwr.r.test(sig.level = 5e-5,power = 0.5)
pwr.r.test(sig.level = 5e-5,power = 0.5,r= 0.1)
pwr.r.test(sig.level = 5e-5,power = 0.5,r= 0.2)
pwr.f2.test(u =1, v = 500,f2 = 0.5)
pwr.f2.test(u =1, v = 500,f2 = 0.2)
pwr.f2.test(u =1, v = 500,f2 = 0.1)
pwr.f2.test(u =1, v = 500,f2 = 0.1,sig.level = 5e-5)
pwr.f2.test(u =2, v = 500,f2 = 0.1,sig.level = 5e-5)
pwr.f2.test(u =2, v = 500,f2 = 0.05,sig.level = 5e-5)
pwr.f2.test(u =2, v = 500,sig.level = 5e-5,power = 0.5)
?pwr.f2.test
pwr.f2.test(u =1, v = 500,f2 = 0.01,sig.level = 5e-5,)
pwr.f2.test(u =1, v = 500,f2 = 0.01,sig.level = 5e-5)
pwr.f2.test(u =2, v = 500,f2 = 0.01,sig.level = 5e-5)
pwr.f2.test(u =1, v = 500,f2 = 0.10,sig.level = 5e-5)
pwr.f2.test(u =1, v = 500,f2 = 0.05,sig.level = 5e-5)
pwr.f2.test(u =100, v = 500,f2 = 0.05,sig.level = 5e-5)
pwr.f2.test(u =1, v = 500,f2 = 0.05,sig.level = 5e-7)
version
library(Maaslin)
example("Maaslin")
q()
data1 = read.table("clipboard",header=T,row.names=1)
rownames(data)
rownames(data1)
data2 = read.table("clipboard",header=T,row.names=1)
head(data)
head(data1)
summary(data)
summary(data1)
summary(data2)
data1 = read.table("clipboard",header=T,row.names=1)
data2 = read.table("clipboard",header=T,row.names=1)
summary(data1)
summary(data2)
all = merge(data1,data2)
?merge
all = merge(data1,data2,all.x)
all = merge(data1,data2,all.x=T)
all = merge(data1,data2,by.x)
all = merge(data1,data2,all=T)
summary(all)
write.table(all,file = "Metabolism/alex_stuff/data/300FG/tsv/300FG_all_NMR.tsv",sep="\t")
rownames(all)
rownames(data1)
rownames(data2)
rownames(data2) = sub("BBMRI16-CVON.","",rownames(data2))
rownames(data2)
all = merge(data1,data2,all=T)
head(all)
class(all)
?merge
data1$SampleID = rownames(data1)
data2$SampleID = rownames(data2)
all = merge(data1,data2,all=T)
head(all)
rownames(all) = all$SampleID
dim(all)
rownames(all)
colnames(all)
all = all[,-226]
colnames(all)
write.table(all,file = "Metabolism/alex_stuff/data/300FG/tsv/300FG_all_NMR.tsv",sep="\t")
data2["C106","XXL.VLDL.P"	]
data2["C106","XXL.VLDL.L"	]
setwd("Vbox_public/miQTL_cookbook_release/")
ls
ls()
dir()
setwd("../my_github/miQTL_cookbook/")
taxonomy_file = "../temp/tax_filtered_id12345.txt"
phenotype_file = "../temp/lld_phenos.txt"
coupling_file = "../temp/coupling.txt"
tax = read.table(taxonomy_file,header=T,row.names=1,sep="\t")
phenos = read.table(taxonomy_file,header = T,row.names=1,sep="\t")
if (exists("coupling_file")){
coupling = read.table(coupling_file,row.names=1,sep="\t")
}
head(coupling)
if (exists("coupling_file")){
coupling = read.table(coupling_file,row.names=1)
}
if (exists("coupling_file")){
coupling = read.table(coupling_file)
}
dim(phenos)
head(phenos)
phenos = read.table(phenotype_file,header = T,row.names=1,sep="\t")
head(phenos)
coupling
coupling_file = "../temp/coupling_pheno_16s.txt"
if (exists("coupling_file")){
coupling = read.table(coupling_file)
}
if (exists("coupling_file")){
coupling = read.table(coupling_file,as.is = T)
}
rownames(tax)%in% coupling[,2]
rownames(tax)%in% coupling[,1]
coupling[,1] %in% rownames(tax)
i = intersect(coupling[,1],rownames(tax))
coupling_file = "../temp/coupling_pheno_16s.txt"
if (exists("coupling_file")){
coupling = read.table(coupling_file,as.is = T)
}
i = intersect(coupling[,1],rownames(tax))
i = intersect(coupling[,2],rownames(tax))
has_pheno = intersect(coupling[,1],rownames(phenos))
coupling[,1] %in% rownames(phenos)
has_both = (coupling[,1] %in% rownames(phenos)) & (coupling[,2] %in% rownames(tax))
has_both
sum(has_both)
coupling= coupling[has_both,]
head(coupling)
tax = tax[coupling[,2],]
phenos = phenos[coupling[,1],]
cbind(rownames(tax),coupling,rownames(phenos))
rownames(tax) = rownames(phenos)
class(phenos)
x.subset = x[!is.na(x)]
corrected_data = apply(tax,2,function(x){
x.subset = x[!is.na(x)]
phenos.subset = phenos[!is.na(x)]
x.resid = resid(lm(x.subset ~ .,data = phenos.subset))
x[!is.na(x)] = x.resid+100 - min(x.resid)
x[is.na(x)] = 0
return(x)
})
tax = read.table(taxonomy_file,header=T,row.names=1,sep="\t")
phenos = read.table(phenotype_file,header = T,row.names=1,sep="\t")
if (exists("coupling_file")){
coupling = read.table(coupling_file,as.is = T)
}
has_both = (coupling[,1] %in% rownames(phenos)) & (coupling[,2] %in% rownames(tax))
coupling= coupling[has_both,]
tax = tax[coupling[,2],]
phenos = phenos[coupling[,1],]
rownames(tax) = rownames(phenos)
corrected_data = apply(tax,2,function(x){
x.subset = x[!is.na(x)]
phenos.subset = phenos[!is.na(x),]
x.resid = resid(lm(x.subset ~ .,data = phenos.subset))
x[!is.na(x)] = x.resid+100
x[is.na(x)] = 0
return(x)
})
dim(corrected_data)
head(corrected_data)
corrected_data2 = cbind(rownames(corrected_data),corrected_data)
head(corrected_data2)
corrected_data2 = data.frame(rownames(corrected_data),corrected_data)
head(corrected_data2)
head(corrected_data2[,1:10])
rownames(corrected_data2) = "-"
rownames(corrected_data2)[1] = "-"
colnames(corrected_data[,1:3])
colnames(corrected_data2[,1:3])
rownames(corrected_data2)[1] = "-"
colnames(corrected_data2[,1:3])
colnames(corrected_data2)[1] = "-"
colnames(corrected_data2[,1:3])
tax = read.table(taxonomy_file,header=T,row.names=1,sep="\t")
phenos = read.table(phenotype_file,header = T,row.names=1,sep="\t")
if (exists("coupling_file")){
coupling = read.table(coupling_file,as.is = T)
}
has_both = (coupling[,1] %in% rownames(phenos)) & (coupling[,2] %in% rownames(tax))
coupling= coupling[has_both,]
tax = tax[coupling[,2],]
phenos = phenos[coupling[,1],]
rownames(tax) = rownames(phenos)
corrected_data = apply(tax,2,function(x){
x.subset = x[!is.na(x)]
phenos.subset = phenos[!is.na(x),]
x.resid = resid(lm(x.subset ~ .,data = phenos.subset))
x[!is.na(x)] = x.resid+100
x[is.na(x)] = 0
return(x)
})
corrected_data2 = data.frame(rownames(corrected_data),corrected_data)
colnames(corrected_data2)[1] = "-"
s == 2
exists("coupling_file") & coupling_file !=""
exists("coupling_file2") & coupling_file2 !=""
colSums(is.na(tax))
colSums(!is.na(tax))
tax = read.table(taxonomy_file,header=T,row.names=1,sep="\t")
colSums(!is.na(tax))
colSums(is.na(tax))
hist(tax[,1])
hist(tax[,2])
hist(tax[,"phylum.Firmicutes.id.1672"])
colSums(!is.na(tax))
if (exists("coupling_file") & coupling_file !="" ){
coupling = read.table(coupling_file,as.is = T)
has_both = (coupling[,1] %in% rownames(phenos)) & (coupling[,2] %in% rownames(tax))
coupling= coupling[has_both,]
tax = tax[coupling[,2],]
phenos = phenos[coupling[,1],]
rownames(tax) = rownames(phenos)
}
colSums(!is.na(tax))
corrected_data = apply(tax,2,function(x){
x.subset = x[!is.na(x)]
phenos.subset = phenos[!is.na(x),]
x.resid = resid(lm(x.subset ~ .,data = phenos.subset))
x[!is.na(x)] = x.resid+100
x[is.na(x)] = 0
return(x)
})
write.table(corrected_data, file = output_file,sep="\t",row.names = F,quote = F)
write.table(corrected_data2, file = output_file,sep="\t",row.names = F,quote = F)
annot = data.frame(platform = "RDP",
HT12v3-ArrayAddress = rownames(corrected_data2),
Gene = rownames(corrected_data2),
Chr = 4,
ChrStart = 1000,
ChrEnd = 1000)
annot = data.frame(platform = "RDP",
HT12v3.ArrayAddress = rownames(corrected_data2),
Gene = rownames(corrected_data2),
Chr = 4,
ChrStart = 1000,
ChrEnd = 1000)
annot = data.frame(platform = "RDP",
"HT12v3-ArrayAddress" = rownames(corrected_data2),
Gene = rownames(corrected_data2),
Chr = 4,
ChrStart = 1000,
ChrEnd = 1000)
colnames(annot)
annot = data.frame(platform = "RDP",
HT12v3.ArrayAddress = rownames(corrected_data2),
Gene = rownames(corrected_data2),
Chr = 4,
ChrStart = 1000,
ChrEnd = 1000)
colnames(annot)[2] = "HT12v3-ArrayAddress"
head(annot)
